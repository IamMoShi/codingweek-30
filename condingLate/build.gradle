plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'eu.telecomnancy'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}


application {
    mainModule = 'eu.telecomnancy.codinglate'
    mainClass = 'eu.telecomnancy.codinglate.App'
}

javafx {
    version = '17.0.9'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'org.hibernate:hibernate-core:5.6.3.Final'
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    implementation 'com.github.gwenn:sqlite-dialect:0.1.2'
    implementation 'org.hibernate:hibernate-entitymanager:5.6.15.Final'
    implementation 'org.springframework.security:spring-security-crypto:6.0.3'
    implementation 'commons-logging:commons-logging:1.3.0'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'
    implementation 'org.slf4j:slf4j-nop:1.7.36'

    implementation 'org.jfxtras:jmetro:11.6.15'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.mnode.ical4j:ical4j:4.0.0-rc3'
    implementation 'org.slf4j:slf4j-nop:2.0.7'
    implementation files('lib/view-11.12.6.jar')

    implementation 'io.github.palexdev:materialfx:11.17.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation('com.google.code.gson:gson:2.8.9')
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}